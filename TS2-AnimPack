-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local lIillllI11I1iIIIill = assert local Ii1ilIi1iI1ii1i11i1 = select local lIl1IIlIlIll1ll11Ii1l = tonumber local i1iiIi1II1IllIIIiiI = unpack local lIlli11IllI1III1IIIi1 = pcall local Ilil1l1Il1iIlil1l1i = setfenv local IIilI1llIlIl1iIlIii = setmetatable local lIIll1IllllIiI1111I = type local l1I1llil1liilIII1I1 = getfenv local iliIiII1ill1lIiI111 = tostring local ii1lIlIl1III11iIliI = error local iIIllii1il1i111liI1 = string.sub local iI1ill1iIi1lii1iIII = string.byte local lIllii1lll11I1111Ii1i = string.char local lIllli1I1l11II1l1lII1 = string.rep local il1IIi1IlI1i1i1iIIi = string.gsub local l1ll11llllIl111iili = string.match local IlIi1IIi1il11I11lIl = table.insert local l1ll111iIiIi1iil1II = iI1ill1iIi1lii1iIII("^", 1) local I1i1lI1iIlI1ll1I1Il, lIlIIIIIlIi1ilIiIliII = #{1019}, #{ 615, 3497, 650, 418, 4191, 3878, 3442, 592, 5667, 2315, 1643, 5503, 2715, 744, 831, 603, 288, 2981, 2150, 118, 1493, 3493, 5048 } + l1ll111iIiIi1iil1II + 130954 local llilIlIlI1liiI11iII = {} local Iliil1I1lIii1Il1l1I = 1 local lIiii1lilI1iilll1Il, lIl1IliIlIl1lIIiiiIli local function iiiiI1lII1ll1111Iil(IiiIi11lIIIlill11l1, iI11iiil1IlI1i11Ili) local l11I1li1IliIiIIiIii IiiIi11lIIIlill11l1 = il1IIi1IlI1i1i1iIIi(iIIllii1il1i111liI1(IiiIi11lIIIlill11l1, 5), "..", function(I1l1l11llili11i1lII) if iI1ill1iIi1lii1iIII(I1l1l11llili11i1lII, 2) == 72 then l11I1li1IliIiIIiIii = lIl1IIlIlIll1ll11Ii1l(iIIllii1il1i111liI1(I1l1l11llili11i1lII, 1, 1)) return "" else local llIli1iiiIlI1ll1lI1 = lIllii1lll11I1111Ii1i(lIl1IIlIlIll1ll11Ii1l(I1l1l11llili11i1lII, 16)) if l11I1li1IliIiIIiIii then local l1I1lliiII1lIlI11ii = lIllli1I1l11II1l1lII1(llIli1iiiIlI1ll1lI1, l11I1li1IliIiIIiIii) l11I1li1IliIiIIiIii = nil return l1I1lliiII1lIlI11ii else return llIli1iiiIlI1ll1lI1 end end end) local function ll1l11liiIllIli1I1I() local IilI1IIiI11iI1i1iii = iI1ill1iIi1lii1iIII(IiiIi11lIIIlill11l1, Iliil1I1lIii1Il1l1I, Iliil1I1lIii1Il1l1I) Iliil1I1lIii1Il1l1I = Iliil1I1lIii1Il1l1I + 1 return IilI1IIiI11iI1i1iii end local function I11i1I11l1ll1illl11() local IilI1IIiI11iI1i1iii, llIli1iiiIlI1ll1lI1, l1I1lliiII1lIlI11ii, lilIll1llil1IIl1Il1 = iI1ill1iIi1lii1iIII(IiiIi11lIIIlill11l1, Iliil1I1lIii1Il1l1I, Iliil1I1lIii1Il1l1I + 3) Iliil1I1lIii1Il1l1I = Iliil1I1lIii1Il1l1I + 4 return lilIll1llil1IIl1Il1 * 16777216 + l1I1lliiII1lIlI11ii * 65536 + llIli1iiiIlI1ll1lI1 * 256 + IilI1IIiI11iI1i1iii end local function lIlli1Illill11lIlliIi(lI1i1Il111llli1ilii, lI111liIII1ilIil1ll, Illil111II1i1Il11ll) if Illil111II1i1Il11ll then local lIlIllI1lI1IIlIli11II, l1ili1llli1IIiil11l = 0, 0 for liIi1iIiiII1lli1Iii = lI111liIII1ilIil1ll, Illil111II1i1Il11ll do lIlIllI1lI1IIlIli11II = lIlIllI1lI1IIlIli11II + 2 ^ l1ili1llli1IIiil11l * lIlli1Illill11lIlliIi(lI1i1Il111llli1ilii, liIi1iIiiII1lli1Iii) l1ili1llli1IIiil11l = l1ili1llli1IIiil11l + 1 end return lIlIllI1lI1IIlIli11II else local lIl11I1il1il1lil1ll1I = 2 ^ (lI111liIII1ilIil1ll - 1) return lIl11I1il1il1lil1ll1I <= lI1i1Il111llli1ilii % (lIl11I1il1il1lil1ll1I + lIl11I1il1il1lil1ll1I) and 1 or 0 end end local function I11llI11l111l1iI11I() local IilI1IIiI11iI1i1iii, llIli1iiiIlI1ll1lI1 = I11i1I11l1ll1illl11(), I11i1I11l1ll1illl11() if IilI1IIiI11iI1i1iii == 0 and llIli1iiiIlI1ll1lI1 == 0 then return 0 end return (-2 * lIlli1Illill11lIlliIi(llIli1iiiIlI1ll1lI1, 32) + 1) * 2 ^ (lIlli1Illill11lIlliIi(llIli1iiiIlI1ll1lI1, 21, 31) - 1023) * ((lIlli1Illill11lIlliIi(llIli1iiiIlI1ll1lI1, 1, 20) * 4294967296 + IilI1IIiI11iI1i1iii) / 4503599627370496 + 1) end local I1iI1lIII1l1ili1I1l = bit or bit32 local i11lIiiIIiI1I1IIil1 = I1iI1lIII1l1ili1I1l and I1iI1lIII1l1ili1I1l.bxor or function(IilI1IIiI11iI1i1iii, llIli1iiiIlI1ll1lI1) local l1ll1l11I11liil1l1l = 1 local l1I1lliiII1lIlI11ii = 0 while IilI1IIiI11iI1i1iii > 0 and llIli1iiiIlI1ll1lI1 > 0 do local i1I1I11I1ii11iI1lIl = IilI1IIiI11iI1i1iii % 2 local i111iI1ii111i11iIII = llIli1iiiIlI1ll1lI1 % 2 if i1I1I11I1ii11iI1lIl ~= i111iI1ii111i11iIII then l1I1lliiII1lIlI11ii = l1I1lliiII1lIlI11ii + l1ll1l11I11liil1l1l end IilI1IIiI11iI1i1iii = (IilI1IIiI11iI1i1iii - i1I1I11I1ii11iI1lIl) / 2 llIli1iiiIlI1ll1lI1 = (llIli1iiiIlI1ll1lI1 - i111iI1ii111i11iIII) / 2 l1ll1l11I11liil1l1l = l1ll1l11I11liil1l1l * 2 end if IilI1IIiI11iI1i1iii < llIli1iiiIlI1ll1lI1 then IilI1IIiI11iI1i1iii = llIli1iiiIlI1ll1lI1 end while IilI1IIiI11iI1i1iii > 0 do local i1I1I11I1ii11iI1lIl = IilI1IIiI11iI1i1iii % 2 if i1I1I11I1ii11iI1lIl > 0 then l1I1lliiII1lIlI11ii = l1I1lliiII1lIlI11ii + l1ll1l11I11liil1l1l end IilI1IIiI11iI1i1iii = (IilI1IIiI11iI1i1iii - i1I1I11I1ii11iI1lIl) / 2 l1ll1l11I11liil1l1l = l1ll1l11I11liil1l1l * 2 end return l1I1lliiII1lIlI11ii end local function lIlIIlIlll1lIi1III1ii(l1lliIi1IliiiIlllI1) local IllIiiI11IIIllIIIll = { iI1ill1iIi1lii1iIII(IiiIi11lIIIlill11l1, Iliil1I1lIii1Il1l1I, Iliil1I1lIii1Il1l1I + 3) } Iliil1I1lIii1Il1l1I = Iliil1I1lIii1Il1l1I + 4 local IilI1IIiI11iI1i1iii = i11lIiiIIiI1I1IIil1(IllIiiI11IIIllIIIll[1], lIl1IliIlIl1lIIiiiIli) local llIli1iiiIlI1ll1lI1 = i11lIiiIIiI1I1IIil1(IllIiiI11IIIllIIIll[2], lIl1IliIlIl1lIIiiiIli) local l1I1lliiII1lIlI11ii = i11lIiiIIiI1I1IIil1(IllIiiI11IIIllIIIll[3], lIl1IliIlIl1lIIiiiIli) local lilIll1llil1IIl1Il1 = i11lIiiIIiI1I1IIil1(IllIiiI11IIIllIIIll[4], lIl1IliIlIl1lIIiiiIli) lIl1IliIlIl1lIIiiiIli = (1 * lIl1IliIlIl1lIIiiiIli + l1lliIi1IliiiIlllI1) % 256 return lilIll1llil1IIl1Il1 * 16777216 + l1I1lliiII1lIlI11ii * 65536 + llIli1iiiIlI1ll1lI1 * 256 + IilI1IIiI11iI1i1iii end local function lIliIIi1i11I1I1III1II(lIlI1IlI1Ii1i1il1i11i) local I1iii11li1IIi111Il1 = I11i1I11l1ll1illl11() local I1Ii11i1lil1liI1iI1 = "" for liIi1iIiiII1lli1Iii = I1i1lI1iIlI1ll1I1Il, I1iii11li1IIi111Il1 do I1Ii11i1lil1liI1iI1 = I1Ii11i1lil1liI1iI1 .. lIllii1lll11I1111Ii1i(i11lIiiIIiI1I1IIil1(iI1ill1iIi1lii1iIII(IiiIi11lIIIlill11l1, Iliil1I1lIii1Il1l1I + liIi1iIiiII1lli1Iii - 1), lIiii1lilI1iilll1Il)) lIiii1lilI1iilll1Il = (lIlI1IlI1Ii1i1il1i11i * lIiii1lilI1iilll1Il + 119) % 256 end Iliil1I1lIii1Il1l1I = Iliil1I1lIii1Il1l1I + I1iii11li1IIi111Il1 return I1Ii11i1lil1liI1iI1 end lIiii1lilI1iilll1Il = ll1l11liiIllIli1I1I() lIl1IliIlIl1lIIiiiIli = ll1l11liiIllIli1I1I() local llIl1i1lIiiIi111ill = {} for liIi1iIiiII1lli1Iii = I1i1lI1iIlI1ll1I1Il, ll1l11liiIllIli1I1I() do local li1Iililil11iIi1I11 = ll1l11liiIllIli1I1I() local il11li1l1IlIIiiiI1l = (liIi1iIiiII1lli1Iii - 1) * 2 llIl1i1lIiiIi111ill[il11li1l1IlIIiiiI1l] = lIlli1Illill11lIlliIi(li1Iililil11iIi1I11, 1, 4) llIl1i1lIiiIi111ill[il11li1l1IlIIiiiI1l + 1] = lIlli1Illill11lIlliIi(li1Iililil11iIi1I11, 5, 8) end local function lIllIiii1liiiliiIIlII() local lII1II1iiIill11l11I = { {}, nil, {}, {}, {}, nil, nil } ll1l11liiIllIli1I1I() local IIlI1IiIii1ii1IlIll = I11i1I11l1ll1illl11() for liIi1iIiiII1lli1Iii = I1i1lI1iIlI1ll1I1Il, IIlI1IiIii1ii1IlIll do lII1II1iiIill11l11I[5][liIi1iIiiII1lli1Iii - I1i1lI1iIlI1ll1I1Il] = lIllIiii1liiiliiIIlII() end ll1l11liiIllIli1I1I() I11i1I11l1ll1illl11() lII1II1iiIill11l11I[2] = ll1l11liiIllIli1I1I() lII1II1iiIill11l11I[6] = ll1l11liiIllIli1I1I() I11i1I11l1ll1illl11() lII1II1iiIill11l11I[7] = ll1l11liiIllIli1I1I() I11i1I11l1ll1illl11() local IIlI1IiIii1ii1IlIll = I11i1I11l1ll1illl11() - (#{ 3023, 365, 631, 2516, 6826, 5353, 1871, 648, 4628, 5293, 2842, 1183, 984, 6352, 1568, 4133, 4858, 6619, 2652, 5690, 2462, 6233, 6628, 3085 } + l1ll111iIiIi1iil1II + 133654) local lIlIII1Illi1IlliIiIli = ll1l11liiIllIli1I1I() for liIi1iIiiII1lli1Iii = I1i1lI1iIlI1ll1I1Il, IIlI1IiIii1ii1IlIll do local liiII1I1I11ll1Ii1I1 local lIIll1IllllIiI1111I = ll1l11liiIllIli1I1I() if lIIll1IllllIiI1111I == #{ 6861, 2029, 2575, 532, 4575, 1469, 1522, 2481, 4937, 5592, 5237, 6414, 525, 3726, 3982, 1612, 4227, 6396, 1244, 2208, 5817, 1374, 2174 } + l1ll111iIiIi1iil1II + -66 then liiII1I1I11ll1Ii1I1 = ll1l11liiIllIli1I1I() end if lIIll1IllllIiI1111I == #{ 5774, 3801, 991, 3334, 4641, 3248, 5570, 3382, 5922, 4440, 3814, 1418, 3641, 4100, 5785, 2123, 1698, 3964, 3110, 6457, 3163 } + l1ll111iIiIi1iil1II + -91 then liiII1I1I11ll1Ii1I1 = I11i1I11l1ll1illl11() end if lIIll1IllllIiI1111I == #{ 817, 5297, 507, 6816, 4490, 3132, 2962, 5226, 1173, 6748, 44, 6528, 622, 868, 1344, 4557, 788, 1977, 91, 1817, 6127, 1901, 2196, 6011 } + l1ll111iIiIi1iil1II + -48 then liiII1I1I11ll1Ii1I1 = iIIllii1il1i111liI1(lIliIIi1i11I1I1III1II(lIlIII1Illi1IlliIiIli), #{ 5650, 4441, 3312, 3252, 641, 4717 }) end if lIIll1IllllIiI1111I == #{ 6633, 710, 319, 4644, 1484, 2863, 3140, 1903, 2268, 1652, 4205, 41, 4050, 4633, 2199, 1916, 6435, 2273, 3975, 2475, 2473, 2669, 4754, 6498 } + l1ll111iIiIi1iil1II + -83 then liiII1I1I11ll1Ii1I1 = #{ 3719, 4542, 5194, 2118, 2717, 1379, 1606, 1971, 3977, 6137, 6838, 483, 5309, 442, 9, 362, 2705, 3152, 493, 2143, 6496, 470 } + l1ll111iIiIi1iil1II + 49751 == #{ 4550, 5588, 4718, 976, 970, 220, 1544, 4620, 3661, 4460, 4932, 2243, 5933, 3453, 310, 2193, 5758, 6775, 350, 4744, 5505, 5469 } + l1ll111iIiIi1iil1II + 128322 end if lIIll1IllllIiI1111I == #{ 1557, 1890, 1833, 3370, 6149, 201, 2299, 1660 } then liiII1I1I11ll1Ii1I1 = I11llI11l111l1iI11I() end if lIIll1IllllIiI1111I == #{ 3294, 6420, 2084, 5235, 6696, 2638, 5885, 5559, 4581, 4946, 4962, 5402, 2604, 1799, 2977, 5743, 5917, 5974, 1343, 5270, 790, 2308 } + l1ll111iIiIi1iil1II + -73 then liiII1I1I11ll1Ii1I1 = #{ 4291, 6771, 3839, 3677, 5454, 6377, 4979, 6777, 2324, 3745, 4365, 934, 1584, 5730, 268, 2161, 3146, 6820, 4026, 2173 } + l1ll111iIiIi1iil1II + 67087 == #{ 4291, 6771, 3839, 3677, 5454, 6377, 4979, 6777, 2324, 3745, 4365, 934, 1584, 5730, 268, 2161, 3146, 6820, 4026, 2173 } + l1ll111iIiIi1iil1II + 67087 end if lIIll1IllllIiI1111I == #{ 6824, 6527, 820, 4410, 6635, 1945, 2510, 3468, 2393, 918, 6244, 1660, 6142, 397, 4145, 295, 1088, 293, 4651, 2442, 272, 3983, 5107 } + l1ll111iIiIi1iil1II + 94 then liiII1I1I11ll1Ii1I1 = iIIllii1il1i111liI1(lIliIIi1i11I1I1III1II(insEncKey), #{1741, 3627}) end if lIIll1IllllIiI1111I == #{ 5525, 1311, 340, 6148, 5253, 375, 3153, 953, 3313, 3557, 3059, 2265, 6643, 6026, 808, 5032, 4590, 277, 5566, 2078 } + l1ll111iIiIi1iil1II + -41 then liiII1I1I11ll1Ii1I1 = ll1l11liiIllIli1I1I() + I11i1I11l1ll1illl11() + I11llI11l111l1iI11I() end if lIIll1IllllIiI1111I == #{ 891, 4115, 1420, 3210, 3899, 1448, 832, 2207, 4281, 2509, 4640, 3267, 6853, 5477, 3366, 1213, 5738, 1943, 4602, 1614, 3241, 5996, 5831, 4174 } + l1ll111iIiIi1iil1II + 82 then liiII1I1I11ll1Ii1I1 = iIIllii1il1i111liI1(lIliIIi1i11I1I1III1II(insEncKey), #{1741, 3627}) end lII1II1iiIill11l11I[4][liIi1iIiiII1lli1Iii - I1i1lI1iIlI1ll1I1Il] = liiII1I1I11ll1Ii1I1 end local IIlI1IiIii1ii1IlIll = I11i1I11l1ll1illl11() for liIi1iIiiII1lli1Iii = I1i1lI1iIlI1ll1I1Il, IIlI1IiIii1ii1IlIll do lII1II1iiIill11l11I[1][liIi1iIiiII1lli1Iii] = I11i1I11l1ll1illl11() end ll1l11liiIllIli1I1I() I11i1I11l1ll1illl11() local II1IililI1liiIIl1I1 = I11i1I11l1ll1illl11() - (#{ 6473, 1735, 2969, 1196, 4258, 3959, 1133, 5492, 276, 6220, 3050, 4124, 3089, 540, 5863, 1330, 4152, 40, 4685, 5092, 779 } + l1ll111iIiIi1iil1II + 133641) local IIIIlilIiIIIilil1Il = ll1l11liiIllIli1I1I() for liIi1iIiiII1lli1Iii = I1i1lI1iIlI1ll1I1Il, II1IililI1liiIIl1I1 do local lIlI1iIl1lIIlIiilI11I = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local li1Iililil11iIi1I11 = lIlIIlIlll1lIi1III1ii(IIIIlilIiIIIilil1Il) lIlI1iIl1lIIlIiilI11I[7] = lIlli1Illill11lIlliIi(li1Iililil11iIi1I11, #{4344}, #{ 5777, 5172, 792, 427, 1256, 6952, 5012, 4698, 907, 1577, 3784, 103, 1183, 3764, 1118, 5214, 5965, 1725 }) lIlI1iIl1lIIlIiilI11I[8] = lIlli1Illill11lIlliIi(li1Iililil11iIi1I11, #{ 5466, 5569, 5870, 5675, 6968, 6654, 5630, 713, 6101, 3985 }, #{ 4947, 5172, 6254, 982, 6944, 3388, 712, 232, 5984, 2639, 987, 2997, 4991, 6547, 4734, 4837, 1232, 5436 }) lIlI1iIl1lIIlIiilI11I[3] = lIlli1Illill11lIlliIi(li1Iililil11iIi1I11, #{ 5261, 6822, 3273, 6246, 6491, 1223, 3262, 4927, 6481, 5315, 6303, 6049, 6375, 3456, 3447, 5937, 1763, 6476, 6166 }, #{ 5819, 3867, 6458, 2544, 398, 5428, 5691, 1345, 5030, 2146, 2585, 2281, 1907, 1301, 6586, 4934, 2899, 5801, 3405, 4505, 4023, 6198, 6800 } + l1ll111iIiIi1iil1II + -91) lIlI1iIl1lIIlIiilI11I[10] = lIlli1Illill11lIlliIi(li1Iililil11iIi1I11, #{5933}, #{ 2881, 3520, 606, 2377, 517, 3417, 6477, 2575, 6714 }) lIlI1iIl1lIIlIiilI11I[4] = lIlli1Illill11lIlliIi(li1Iililil11iIi1I11, #{ 5174, 1645, 6210, 924, 4585, 153, 3183, 5455, 1544, 5550, 4717, 3527, 5115, 4818, 6627, 6291, 3792, 2902, 3238, 3965 } + l1ll111iIiIi1iil1II + -87, #{ 3391, 5767, 6799, 2002, 6072, 3468, 5099, 2694, 5924, 5880, 44, 881, 5388, 1777, 6272, 2355, 3075, 1553, 6019, 995, 6106, 6738 } + l1ll111iIiIi1iil1II + -84) lII1II1iiIill11l11I[3][liIi1iIiiII1lli1Iii] = lIlI1iIl1lIIlIiilI11I end for liIi1iIiiII1lli1Iii = I1i1lI1iIlI1ll1I1Il, II1IililI1liiIIl1I1 do local lIlI1iIl1lIIlIiilI11I = lII1II1iiIill11l11I[3][liIi1iIiiII1lli1Iii] local Ili1Ii11lil1lii1lI1 = llIl1i1lIiiIi111ill[lIlI1iIl1lIIlIiilI11I[4]] if Ili1Ii11lil1lii1lI1 == #{2473, 4439} and lIlI1iIl1lIIlIiilI11I[8] > 255 then lIlI1iIl1lIIlIiilI11I[6] = true lIlI1iIl1lIIlIiilI11I[1] = lII1II1iiIill11l11I[4][lIlI1iIl1lIIlIiilI11I[8] - 256] end if Ili1Ii11lil1lii1lI1 == #{ 1758, 1244, 3269 } then if lIlI1iIl1lIIlIiilI11I[10] > 255 then lIlI1iIl1lIIlIiilI11I[2] = true lIlI1iIl1lIIlIiilI11I[5] = lII1II1iiIill11l11I[4][lIlI1iIl1lIIlIiilI11I[10] - 256] end if lIlI1iIl1lIIlIiilI11I[8] > 255 then lIlI1iIl1lIIlIiilI11I[6] = true lIlI1iIl1lIIlIiilI11I[1] = lII1II1iiIill11l11I[4][lIlI1iIl1lIIlIiilI11I[8] - 256] end end if Ili1Ii11lil1lii1lI1 == #{ 6241, 6739, 3464, 3490 } then lIlI1iIl1lIIlIiilI11I[9] = lII1II1iiIill11l11I[4][lIlI1iIl1lIIlIiilI11I[7]] end if Ili1Ii11lil1lii1lI1 == #{2912} and lIlI1iIl1lIIlIiilI11I[10] > 255 then lIlI1iIl1lIIlIiilI11I[2] = true lIlI1iIl1lIIlIiilI11I[5] = lII1II1iiIill11l11I[4][lIlI1iIl1lIIlIiilI11I[10] - 256] end end ll1l11liiIllIli1I1I() return lII1II1iiIill11l11I end local function ilIlilIliill1l11iii(lII1II1iiIill11l11I, iI11iiil1IlI1i11Ili, Iil11i1lI1I1l1IIiil) local liIII1lliIlli1il1li, lIli1lI111IIilIllliIi = 10, 16 local lil1ililIiilII1ilII = lII1II1iiIill11l11I[3] local lIiliIililIIliIl1ll = 6 local liiiI11iii1IIIi11ll = lII1II1iiIill11l11I[5] local IlilI1ilI1Il11I1l1l = lII1II1iiIill11l11I[7] local lili1I11lliiiiIilil = lII1II1iiIill11l11I[2] local lIlIilIliI1I1iIlI11I1 = 4 local I1llI1iIi1iiliIIili = lII1II1iiIill11l11I[1] local iii1iI1i1lIil1IIi1I = 10 local function IiI1i1llil1ii1lIIlI(...) local II1lli1i1Il1lI1llII = 0 local IIlliIlIiilii1iiIli = { i1iiIi1II1IllIIIiiI({}, 1, lili1I11lliiiiIilil) } local iIlI1ilIIliiIi1I1Ii = 1 local lIliiIi1lIliiiIIiII1l = {} local iiIlIIIi1li1Illi11l = {} local iI11iiil1IlI1i11Ili = l1I1llil1liilIII1I1() local iiI1II1iI1III11il1I = { ... } local i1Il1I1I11IilIIII11 = #iiI1II1iI1III11il1I - 1 for liIi1iIiiII1lli1Iii = 0, i1Il1I1I11IilIIII11 do if liIi1iIiiII1lli1Iii < IlilI1ilI1Il11I1l1l then IIlliIlIiilii1iiIli[liIi1iIiiII1lli1Iii] = iiI1II1iI1III11il1I[liIi1iIiiII1lli1Iii + 1] end end local function lIlii1i1lIiIi1IliI1lI(...) local l1I1lliiII1lIlI11ii = Ii1ilIi1iI1ii1i11i1("#", ...) local l1ii1I11liI1Il1ilii = { ... } return l1I1lliiII1lIlI11ii, l1ii1I11liI1Il1ilii end local function lIlliiIlIilI11l1Illll() while true do local llIl1iI1iill1i11IiI = lil1ililIiilII1ilII[iIlI1ilIIliiIi1I1Ii] local i1iiil1I11li1iIliIl = llIl1iI1iill1i11IiI[4] iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii + 1 if i1iiil1I11li1iIliIl >= 9 then if i1iiil1I11li1iIliIl >= 13 then if i1iiil1I11li1iIliIl < 15 then if i1iiil1I11li1iIliIl ~= 14 then IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = llIl1iI1iill1i11IiI[9] elseif llIl1iI1iill1i11IiI[8] == 238 then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii - 1 lil1ililIiilII1ilII[iIlI1ilIIliiIi1I1Ii] = { [4] = 8, [3] = (llIl1iI1iill1i11IiI[3] - 152) % 256, [10] = (llIl1iI1iill1i11IiI[10] - 152) % 256 } else IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = #IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[10]] end elseif i1iiil1I11li1iIliIl < 16 then IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = iI11iiil1IlI1i11Ili[llIl1iI1iill1i11IiI[9]] elseif i1iiil1I11li1iIliIl == 17 then iI11iiil1IlI1i11Ili[llIl1iI1iill1i11IiI[9]] = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] elseif llIl1iI1iill1i11IiI[8] == 65 then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii - 1 lil1ililIiilII1ilII[iIlI1ilIIliiIi1I1Ii] = { [4] = 7, [3] = (llIl1iI1iill1i11IiI[3] - 184) % 256, [8] = (llIl1iI1iill1i11IiI[10] - 184) % 256 } else IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = Iil11i1lI1I1l1IIiil[llIl1iI1iill1i11IiI[10]] end elseif i1iiil1I11li1iIliIl >= 11 then if i1iiil1I11li1iIliIl == 12 then IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = llIl1iI1iill1i11IiI[10] ~= 0 if llIl1iI1iill1i11IiI[8] ~= 0 then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii + 1 end else local l1I1lliiII1lIlI11ii if llIl1iI1iill1i11IiI[6] then l1I1lliiII1lIlI11ii = llIl1iI1iill1i11IiI[1] else l1I1lliiII1lIlI11ii = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[8]] end IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[10]][l1I1lliiII1lIlI11ii] end elseif i1iiil1I11li1iIliIl ~= 10 then local llIli1iiiIlI1ll1lI1, l1I1lliiII1lIlI11ii if llIl1iI1iill1i11IiI[2] then llIli1iiiIlI1ll1lI1 = llIl1iI1iill1i11IiI[5] else llIli1iiiIlI1ll1lI1 = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[10]] end if llIl1iI1iill1i11IiI[6] then l1I1lliiII1lIlI11ii = llIl1iI1iill1i11IiI[1] else l1I1lliiII1lIlI11ii = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[8]] end if llIli1iiiIlI1ll1lI1 == l1I1lliiII1lIlI11ii ~= (llIl1iI1iill1i11IiI[3] ~= 0) then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii + 1 end else IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[10]] end elseif i1iiil1I11li1iIliIl < 4 then if i1iiil1I11li1iIliIl >= 2 then if i1iiil1I11li1iIliIl ~= 3 then if llIl1iI1iill1i11IiI[8] == 211 then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii - 1 lil1ililIiilII1ilII[iIlI1ilIIliiIi1I1Ii] = { [4] = 10, [3] = (llIl1iI1iill1i11IiI[3] - 242) % 256, [10] = (llIl1iI1iill1i11IiI[10] - 242) % 256 } else Iil11i1lI1I1l1IIiil[llIl1iI1iill1i11IiI[10]] = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] end elseif llIl1iI1iill1i11IiI[8] == 52 then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii - 1 lil1ililIiilII1ilII[iIlI1ilIIliiIi1I1Ii] = { [4] = 16, [3] = (llIl1iI1iill1i11IiI[3] - 144) % 256, [10] = (llIl1iI1iill1i11IiI[10] - 144) % 256 } elseif llIl1iI1iill1i11IiI[8] == 120 then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii - 1 lil1ililIiilII1ilII[iIlI1ilIIliiIi1I1Ii] = { [4] = 2, [3] = (llIl1iI1iill1i11IiI[3] - 163) % 256, [10] = (llIl1iI1iill1i11IiI[10] - 163) % 256 } else lIliiIi1lIliiiIIiII1l[IIlliIlIiilii1iiIli] = nil local IlIlI1lii1iiil1i11I = llIl1iI1iill1i11IiI[3] local lIlIlli1lI111IIIiI1 = llIl1iI1iill1i11IiI[10] if lIlIlli1lI111IIIiI1 == 1 then return true end local lIl1iI11lIiI1iI1II1Ii = IlIlI1lii1iiil1i11I + lIlIlli1lI111IIIiI1 - 2 if lIlIlli1lI111IIIiI1 == 0 then lIl1iI11lIiI1iI1II1Ii = II1lli1i1Il1lI1llII end return true, IlIlI1lii1iiil1i11I, lIl1iI11lIiI1iI1II1Ii end elseif i1iiil1I11li1iIliIl ~= 1 then local lI1I1iI1iIiIII1iIIi = liiiI11iii1IIIi11ll[llIl1iI1iill1i11IiI[7]] local ii111iliIi1iiIIiili = {} if lI1I1iI1iIiIII1iIIi[lIiliIililIIliIl1ll] > 0 then do local ii111i11iiIli1111Il = {} ii111iliIi1iiIIiili = IIilI1llIlIl1iIlIii({}, { __index = function(l1ii1I11liI1Il1ilii, ill11lIlI111IIli1iI) local iilIIli1ilIIllliiIl = ii111i11iiIli1111Il[ill11lIlI111IIli1iI] return iilIIli1ilIIllliiIl[1][iilIIli1ilIIllliiIl[2]] end, __newindex = function(l1ii1I11liI1Il1ilii, ill11lIlI111IIli1iI, lII1Il11llIiiil11il) local iilIIli1ilIIllliiIl = ii111i11iiIli1111Il[ill11lIlI111IIli1iI] iilIIli1ilIIllliiIl[1][iilIIli1ilIIllliiIl[2]] = lII1Il11llIiiil11il end }) for liIi1iIiiII1lli1Iii = 1, lI1I1iI1iIiIII1iIIi[lIiliIililIIliIl1ll] do local l1Il1ll1iliill1llIl = lil1ililIiilII1ilII[iIlI1ilIIliiIi1I1Ii] if l1Il1ll1iliill1llIl[lIlIilIliI1I1iIlI11I1] == liIII1lliIlli1il1li then ii111i11iiIli1111Il[liIi1iIiiII1lli1Iii - 1] = { IIlliIlIiilii1iiIli, l1Il1ll1iliill1llIl[iii1iI1i1lIil1IIi1I] } elseif l1Il1ll1iliill1llIl[lIlIilIliI1I1iIlI11I1] == lIli1lI111IIilIllliIi then ii111i11iiIli1111Il[liIi1iIiiII1lli1Iii - 1] = { Iil11i1lI1I1l1IIiil, l1Il1ll1iliill1llIl[iii1iI1i1lIil1IIi1I] } end iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii + 1 end if not lIliiIi1lIliiiIIiII1l[IIlliIlIiilii1iiIli] then lIliiIi1lIliiiIIiII1l[IIlliIlIiilii1iiIli] = {ii111i11iiIli1111Il} else IlIi1IIi1il11I11lIl(lIliiIi1lIliiiIIiII1l[IIlliIlIiilii1iiIli], ii111i11iiIli1111Il) end end end local IIlII11II1Ii1IIiIli = ilIlilIliill1l11iii(lI1I1iI1iIiIII1iIIi, iI11iiil1IlI1i11Ili, ii111iliIi1iiIIiili) IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = IIlII11II1Ii1IIiIli else local iIII11IllliiiiIIi1l = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[10]] local l1I1lliiII1lIlI11ii if llIl1iI1iill1i11IiI[6] then l1I1lliiII1lIlI11ii = llIl1iI1iill1i11IiI[1] else l1I1lliiII1lIlI11ii = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[8]] end IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3] + 1] = iIII11IllliiiiIIi1l IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = iIII11IllliiiiIIi1l[l1I1lliiII1lIlI11ii] end elseif i1iiil1I11li1iIliIl >= 6 then if i1iiil1I11li1iIliIl < 7 then local llIli1iiiIlI1ll1lI1, l1I1lliiII1lIlI11ii if llIl1iI1iill1i11IiI[2] then llIli1iiiIlI1ll1lI1 = llIl1iI1iill1i11IiI[5] else llIli1iiiIlI1ll1lI1 = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[10]] end if llIl1iI1iill1i11IiI[6] then l1I1lliiII1lIlI11ii = llIl1iI1iill1i11IiI[1] else l1I1lliiII1lIlI11ii = IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[8]] end IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]][llIli1iiiIlI1ll1lI1] = l1I1lliiII1lIlI11ii elseif i1iiil1I11li1iIliIl == 8 then IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] = not IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[10]] elseif llIl1iI1iill1i11IiI[10] == 192 then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii - 1 lil1ililIiilII1ilII[iIlI1ilIIliiIi1I1Ii] = { [4] = 3, [3] = (llIl1iI1iill1i11IiI[3] - 157) % 256, [10] = (llIl1iI1iill1i11IiI[8] - 157) % 256 } elseif not not IIlliIlIiilii1iiIli[llIl1iI1iill1i11IiI[3]] == (llIl1iI1iill1i11IiI[8] == 0) then iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii + 1 end elseif i1iiil1I11li1iIliIl ~= 5 then local IlIlI1lii1iiil1i11I = llIl1iI1iill1i11IiI[3] local iiI1II1iI1III11il1I = llIl1iI1iill1i11IiI[10] local lIliiiillIiIlll1iilIl = llIl1iI1iill1i11IiI[8] local IIiIiiIllIiIIiiIiil, lIl1iI11lIiI1iI1II1Ii, lIlliiIlIilI11l1Illll if iiI1II1iI1III11il1I ~= 1 then if iiI1II1iI1III11il1I ~= 0 then lIl1iI11lIiI1iI1II1Ii = IlIlI1lii1iiil1i11I + iiI1II1iI1III11il1I - 1 else lIl1iI11lIiI1iI1II1Ii = II1lli1i1Il1lI1llII end lIl1iI11lIiI1iI1II1Ii, IIiIiiIllIiIIiiIiil = lIlii1i1lIiIi1IliI1lI(IIlliIlIiilii1iiIli[IlIlI1lii1iiil1i11I](i1iiIi1II1IllIIIiiI(IIlliIlIiilii1iiIli, IlIlI1lii1iiil1i11I + 1, lIl1iI11lIiI1iI1II1Ii))) else lIl1iI11lIiI1iI1II1Ii, IIiIiiIllIiIIiiIiil = lIlii1i1lIiIi1IliI1lI(IIlliIlIiilii1iiIli[IlIlI1lii1iiil1i11I]()) end if lIliiiillIiIlll1iilIl ~= 1 then if lIliiiillIiIlll1iilIl ~= 0 then lIl1iI11lIiI1iI1II1Ii = IlIlI1lii1iiil1i11I + lIliiiillIiIlll1iilIl - 2 II1lli1i1Il1lI1llII = lIl1iI11lIiI1iI1II1Ii + 1 else lIl1iI11lIiI1iI1II1Ii = lIl1iI11lIiI1iI1II1Ii + IlIlI1lii1iiil1i11I - 1 II1lli1i1Il1lI1llII = lIl1iI11lIiI1iI1II1Ii end lIlliiIlIilI11l1Illll = 0 for liIi1iIiiII1lli1Iii = IlIlI1lii1iiil1i11I, lIl1iI11lIiI1iI1II1Ii do lIlliiIlIilI11l1Illll = lIlliiIlIilI11l1Illll + 1 IIlliIlIiilii1iiIli[liIi1iIiiII1lli1Iii] = IIiIiiIllIiIIiiIiil[lIlliiIlIilI11l1Illll] end else II1lli1i1Il1lI1llII = IlIlI1lii1iiil1i11I - 1 end for liIi1iIiiII1lli1Iii = II1lli1i1Il1lI1llII + 1, lili1I11lliiiiIilil do IIlliIlIiilii1iiIli[liIi1iIiiII1lli1Iii] = nil end else iIlI1ilIIliiIi1I1Ii = iIlI1ilIIliiIi1I1Ii + (llIl1iI1iill1i11IiI[7] - lIlIIIIIlIi1ilIiIliII) end end end local lIl1Iilili11IIlIilIII, I1Ii11i1lil1liI1iI1, lIllIIliI1ili1III1l1I, IliiiIiIi1l1Ii11ili = lIlli11IllI1III1IIIi1(lIlliiIlIilI11l1Illll) if lIl1Iilili11IIlIilIII then if lIllIIliI1ili1III1l1I then return i1iiIi1II1IllIIIiiI(IIlliIlIiilii1iiIli, lIllIIliI1ili1III1l1I, IliiiIiIi1l1Ii11ili) end else ii1lIlIl1III11iIliI("Luraph Script:" .. (I1llI1iIi1iiliIIili[iIlI1ilIIliiIi1I1Ii - 1] or "") .. ": " .. iliIiII1ill1lIiI111(I1Ii11i1lil1liI1iI1), 0) end end Ilil1l1Il1iIlil1l1i(IiI1i1llil1ii1lIIlI, iI11iiil1IlI1i11Ili) return IiI1i1llil1ii1lIIlI end local IlllIi1illIili1ll1I = lIllIiii1liiiliiIIlII() return ilIlilIliill1l11iii(IlllIi1illIili1ll1I, iI11iiil1IlI1i11Ili)() end iiiiI1lII1ll1111Iill1I1llil1liilIII1I1()) 
